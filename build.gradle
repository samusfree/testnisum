plugins {
  id 'application'
  id 'java'
  id 'groovy'
  id 'idea'
  id 'jacoco'
  id 'org.springframework.boot'
  id 'io.spring.dependency-management'
  id 'org.liquibase.gradle'
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(javaVersion)
  }
}

application {
  mainClass = 'com.nisum.testnisum.TestnisumApplication'
}

bootJar {
  archiveBaseName = 'testnisum'
  archiveVersion = appVersion
  mainClass = 'com.nisum.testnisum.TestnisumApplication'
}

repositories {
  mavenCentral()
}

test {
  useJUnitPlatform()
}

def commonJacocoCoverageConfig = {
  executionData fileTree(layout.buildDirectory).include("jacoco/test.exec")
  afterEvaluate {
    classDirectories.setFrom(files(classDirectories.files.collect {
      fileTree(dir: it, excludes: [
          'com/nisum/testnisum/configuration/**',
          'com/nisum/testnisum/data/**',
          'com/nisum/testnisum/security/CustomUserDetails.class',
          'com/nisum/testnisum/dto/**',
          'com/nisum/testnisum/TestnisumApplication.class',
      ])
    }))
  }
}

jacocoTestReport {
  dependsOn test
  reports {
    xml.required = true
  }

  configure commonJacocoCoverageConfig
}

jacoco {
  toolVersion = jacocoVersion
  reportsDirectory = layout.buildDirectory.dir('reports/jacoco')
  jacocoTestCoverageVerification {
    violationRules {
      rule {
        limit {
          minimum = 0.90
        }
      }
    }
    configure commonJacocoCoverageConfig
  }
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-configuration-processor'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-security'

  implementation "org.projectlombok:lombok:${lombokVersion}"
  annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
  compileOnly "org.projectlombok:lombok:${lombokVersion}"

  implementation "org.mapstruct:mapstruct:${mapstructVersion}"
  annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
  annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructVersion}"

  implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"
  implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
  runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
  runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

  implementation "org.liquibase:liquibase-core:${liquibaseCoreVersion}"

  runtimeOnly 'com.h2database:h2'

  testImplementation "org.springframework.boot:spring-boot-starter-test"
  testImplementation "org.spockframework:spock-core:${spockVersion}"
  testImplementation "org.spockframework:spock-spring:${spockVersion}"
}

check.dependsOn jacocoTestCoverageVerification